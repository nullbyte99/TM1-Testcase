#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

importDir = LOWER ( '}GitExport/' );

### Cube data ###
cubes_ctrl_dimension = '}Cubes';
element_count = DIMSIZ ( cubes_ctrl_dimension );

element_index = 1;
WHILE(element_index <= element_count);
  cube_name = DIMNM(cubes_ctrl_dimension, element_index);
  IF(SCAN('}', cube_name) <> 1);
    EXECUTEPROCESS ( 'Git.ImportCube', 'pCubeName', cube_name, 'pImportDir', importDir );
  ENDIF;
  element_index = element_index + 1;
END;

### Element Attributes ###
EXECUTEPROCESS ( 'Git.ImportAttributes', 'pImportDir', importDir );

### Element Attributes Data ###
dimensions_ctrl_dimension = '}Dimensions';
element_count = DIMSIZ(dimensions_ctrl_dimension);

element_index = 1;
WHILE(element_index <= element_count);
  dimension_name = DIMNM(dimensions_ctrl_dimension, element_index);
  IF(SCAN('}', dimension_name) <> 1);
    attribute_dimension_name = '}ElementAttributes_'|dimension_name;
    IF(CUBEEXISTS(attribute_dimension_name) = 1);
      EXECUTEPROCESS ( 'Git.ImportCube', 'pCubeName', attribute_dimension_name, 'pFileName', importDir );
    ENDIF;
  ENDIF;
  element_index = element_index + 1;
END;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion