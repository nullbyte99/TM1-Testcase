#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


IF ( CUBEEXISTS ( 'diag.ti.stats' ) = 1 );
   CUBEDESTROY ( 'diag.ti.stats' );
ENDIF;

IF ( DIMENSIONEXISTS ( 'diag.ti.stats.lines' ) = 1 );
   DIMENSIONDESTROY ( 'diag.ti.stats.lines' );
ENDIF;
DIMENSIONCREATE ( 'diag.ti.stats.lines' );

count = 1;
WHILE ( count <= 1000 );
   DimensionElementInsertDirect ( 'diag.ti.stats.lines', '', NumberToString ( count ), 'N' );
   count = count + 1;
END;



IF ( DIMENSIONEXISTS ( 'diag.ti.stats' ) = 1 );
   DIMENSIONDESTROY ( 'diag.ti.stats' );
ENDIF;
DIMENSIONCREATE ( 'diag.ti.stats' );

DimensionElementInsertDirect ( 'diag.ti.stats', '', 'Start Time', 'N' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'End Time', 'N' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'Run Time', 'N' );

DimensionElementInsertDirect ( 'diag.ti.stats', '', 'P1', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'V1', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'P2', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'V2', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'P3', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'V4', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'P5', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'V5', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'P6', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'V6', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'P7', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'V7', 'S' );

DimensionElementInsertDirect ( 'diag.ti.stats', '', 'Runtime_S', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'Status', 'S' );
DimensionElementInsertDirect ( 'diag.ti.stats', '', 'Detail', 'S' );


IF ( DIMIX ( '}ElementAttributes_}Processes', 'Run Count' ) = 0 );
    ATTRINSERT ( '}Processes', '', 'Run Count', 'N' );
ENDIF;

index = 1;
processName = DIMNM ( '}Processes', index );
WHILE ( processName @<> '' );
   AttrPutN( 0, '}Processes', processName , 'Run Count' );
   index = index + 1;
   processName = DIMNM ( '}Processes', index );
END;


CUBECREATE ( 'diag.ti.stats', '}Processes', 'diag.ti.stats.lines', 'diag.ti.stats' );
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion